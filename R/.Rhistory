N
d
d[, sum(N)]
d
die_1
die_2
c(die_1, die_2)
roll_1
roll_2
d
n_rolls
exp_results_1
length(exp_results_1)
length(exp_results_2)
length(exp_number)
d
install.packages('combinat')
possible_outcomes
possible_outcomes
length(unique(possible_outcomes))
possible_outcomes
data.table(possible_outcomes)
str(data.table(possible_outcomes))
unlist(possible_outcomes)
matrix(unlist(possible_outcomes), 4) 
matrix(unlist(possible_outcomes), ncol=4) 
?matrix
matrix(unlist(possible_outcomes), ncol=4, byrow=TRUE?matrix) 
matrix(unlist(possible_outcomes), ncol=4, byrow=TRUE) 
d
d
d
d
d
d[, X := NULL]
d
d
?table
table(d$X)
?table
1/16
data.table(table(d[, X]) / d[, .N])
table(d[, X]) / d[, .N]
p
p[0]
p[1]
p[4]
p[5]
p
11/16
14/16
d
dd
good
bad
ll
all
p0
24/91
.5 * .5
choose(10,2)
choose(5,1)
p1
45/91
all
permn(all)
?table
a     with(airquality, table(cut(Temp, quantile(Temp)), Month))

     with(airquality, table(cut(Temp, quantile(Temp)), Month))

     DF <- as.data.frame(UCBAdmissions)

DF
     class(tab <- xtabs(Freq ~ ., DF)) # xtabs & table

     all(tab == UCBAdmissions)
     all.equal(dimnames(tab), dimnames(UCBAdmissions))

str(DF)
 <- fread(UCBAdmissions)
 ucb <- fread(UCBAdmissions)
t
str(t)
?table
summary(table)
summary(t)
as.data.table(t)
?tabulate
a     tabulate(c(2,3,5))

     tabulate(c(2,3,5))

c(2,3,5)
tabulate(c(2,3,3,5), nbins = 10)
ozone
tabulate(ozone, nbins=10)
tt <- tabulate(ozone, nbins=10)
tt
str(tt)
t
?tabulate
min(ozone)
max(ozone)
seq(0,12,by=1)
?table
DF
str(UCBAdmissions)
?table
ls()
?rm
ls()
UCBAdmissions
?UCBAdmissions
d
as.data.table(UKDriverDeaths)
UKDriverDeaths
?ggplotGrob
)
data(email)
data(COL)
email$spam <- ifelse(email$spam == 0, "not\nspam", "spam")
par(las = 1)
MosaicPlot(number ~ spam, email, col = COL[1:3], off = 0.02)
d
d
d
d[, N[Admit=='Admitted']]
d[, N[Admit=='Admitted']/N[Admit=='Rejected'], .(Gender, Dept)]
dd
dd
d
dd
d
d <- as.data.table(uspop)
d <- as.data.table(uspop)
d
uspop
plot(uspop)
sleep
d
d
dd
dd
d
d
dd
d
(0,4,by=.5)
seq(0,4,by=.5)
summary(d)
d
d[, summary(extra), .(group)]
ChickWeight
d
dd
dd
d
d[, unique(Time)]
plot(d[, time])
plot(d[, Time])
dd
d
mtcars
mtcars
d
d
mtcars
str(mtcars)
iris
iris

d

d
d
?melt
add
dd
d
dd
dd[, unique(variable)]
str(dd)
dd
dd
d
dd
dd
d
dd
str(dd)
dd
str(d)
dd
head(d)
dd
ls()
?ls()
?ls
?mode
d
d[, mean(noise_levels)]
noise_mean
noise_mean
noise_median
noise_mean
noise_median
b
d
str(d)
?range
ozone_range
ozone_range
d
d
dd
d
d
d
d
d
d
d[, mean(extra), .(group)]
extra_mean_1
extra_mean_2
dd
dd
dd
dd
dd
dd
dd
dd[, .(unique(c(extra_mean, extra_sd)))]
dd[, unique(c(extra_mean, extra_sd)), .(group)]
dd[, .(extra_mean[1], extra_sd[1]), .(group)]
ddd <- dd[, .(extra_mean[1], extra_sd[1]), .(group)]
ddd
dd
dd
dd
dd
ddd
ddd
ddd
dd
?iris
d
dd
dd
dd
dd
dd
dd
d
dd
dd
rat_weights
d
b
b
b
d
d
dd
dd
data()
str(msleep)
str(seals)
data()
str(swiss)
midwest
as.data.table(midwest)
d <- as.data.table(midwest)
d
str(d)
d[, unique(state)]
d[, area, .(state, county)]
d[, mean(area), .(state)]
d
d[, mean(area), .(state)]
str(d)
data()
str(trees)
d
dd
dd
dd
dd
str(dd)
d
ad
d
target
DT
d
d
str(d)
d[, unique(quality)]
install.packages("ISLR")
d
dsample
str(dsample)
as.data.table(diamonds)
d
d
?sample
dd
install.packages(hflights)
install.packages('hflights')
d
str(d)
ggplot(diamonds, aes(price, colour=cut)) +geom_freqpoly(bins=50)
2 + 2
sqrt(pi)
pi
x <- sqrt(pi)
x
24 / 4
y <- 24 / 4
y
x
y
x + y
x - y
x / y
x * y
sqrt(x*y)
?c
c(1,2,3,4,3,5,7,3,7)
t <- c(1,2,3,4,3,5,7,3,7)
t
t
t[2]
t[2,3,4]
t[c(2,3,4)]
4:10
t[2:5]
library(data.table)

x
y
sqrt(10)
DT
c("b","b","b","a","a","c")
DT
DT
DT$ID
class(c(3.5, 5.3))
x <- 8
X <- 8
X
x_y <-  8
x.y <- 8
x.y
DT
class(DT)
DF
DT
class(DT)
class(DF)
DF == DT
class(DT2)
2 == 2
x
y
x == y
x
y
x == y
x = y
x
x <- 8
x
DT
class(DT)
1:2
c(1,2)
DT[c(1,3,5)]
DT
DT
DT
DT[order(a)]
DT[order(a,-b)]
DT[order(-b,a)]
DT
x <- 5
sqrt(x)
x = 5
sqrt(x)
new_func <- function(var) {sqrt(var)}
new_func
new_func(x)
new_func <- function(var) {print(x); sqrt(var)}
new_func(x)
new_func <- function(var) {x=3; sqrt(var)}
x
new_func(x)
x
new_func <- function(var) {x <- 3; sqrt(var)}
x
new_func(x)
x
condition
condition
?prand
?pnorm
rnorm(1000)
rnorm(5)
rnorm(5, 100, 5)
?rnorm
rnorm(5, mean=100, sd=25)
length(condition)
length(x)
length(y)
length(condition)
d
d
condition
x1
y1
d
DT
DT
DT
c(1,3,5)
class(c(1,3,5))
class(c('a', 'b'))
c(1,2,3,4,5)
1:50
DT
DT[, .(a,b)]
DT
2 == 2
2 != 2
2 != 3
DT
sum(c(FALSE, TRUE))
DT
DT[1]
DT[1:2, .(b)]
DT[, .N, .(ID)]
DT
flights
str(flight)
str(flights)
DT
d
flights
str(flights)
str(flights)
flights[, carrier]
c(1,2,3,3,4,4,4,4,5)
?str
flights[, .(unique(carrier))]
?list
2==2
2!=2
getwd()
install.packages('curl')
flights_web
flights_web
str(flights_web)
ls()
ls()
mpg
mpg
d
mpg
dd
?sample
dd
install.packages('ggplot2')
NA
class(NA)
NaN
100 / 0
d
?ggplot
     df <- data.frame(
       gp = factor(rep(letters[1:3], each = 10)),
       y = rnorm(30)
     )
     ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))

d
g
class(g)
?+
f
class(f)
f
d
d[, unique(class)]
d[, .N]
d
d[, length(manufacturer)]
d[, .N, .(drv)]
d[, length(f1), .(drv)]
d
d[, f1]
d
d[, model]
d[, length(fl), .(drv)]
d[, >N, .(drv)]
d[, .N, .(drv)]
