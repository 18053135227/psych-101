dd[1]
dd_rec
dd_rec[1]
dd_rec[[1]]
dd_rec
dd
dd
dd
d
E_x
E_y
dd
dd
dd
d
d
dd
dd
p)
p
dd
num_outcomes_per_consumer
possible_permu
possible_permutations
possible_outcomes
d
d
p
dd
dd
dd
dd
dd
ggplot(dd, aes(x=X, y=p)) +
  geom_point() +
  geom_segment(aes(xend=X, yend=0)) +
  facet_wrap(~variable) +
  theme(aspect.ratio = 1) +
  geom_vline(aes(xintercept=pop_mean, colour='red')) +
  geom_segment(aes(
    x=pop_mean-pop_sd,
    xend=pop_mean+pop_sd,
    y=0.5,
    yend=0.5,
    colour='red')) +
  xlab('X = number of A preferences') +
  ylab('Probability') +

dd
d
dd
d
p)
p0
dd
?pbinom
?pbinom
dd
d
sample
x
d
d
exp_val
dd
dd
dd
dd[, unique(population_mean), .(n,p)]
dd[, unique(pop_mean), .(n,p)]
dd[, unique(pop_mean), .(p)]
dd[, unique(sample_mean), .(p)]
value
d
dd
melt(d)
dd <- melt(d)
dd
dd
dd <- data.table(c(value, value), c(p_x, p_y))
dd
dd
d
E_x
E_y
dd
dd
dd
dd
dd
dd
dd
e
permutations(length(e), 3, e, repeats.allowed=FALSE)
permutations(length(e), 3, e, repeats.allowed=TRUE)
permutations(length(e), 3, e, set=TRUE, repeats.allowed=TRUE)
permutations(length(e), 3, e, set=TRUE, repeats.allowed=FALSE)
e
permutations(length(e), 3, e, set=FALSE, repeats.allowed=FALSE)
d
d
d
dd
dd
dd
d
dd 
dd
p
possible_combinations
possible_permutations
possible_combinations
possible_permutations
num_outcomes_per_consumer
d
d
d
?table
d[, X] 
p
dd
d[, .N]
dd
p
dd
dd[X >= 2]
dd
dd
dd
dd
d
d
d[, unique(pX)]
d[, unique(pX), .(X)]
dd
?dbinom
?pbinom
ad
d
d
rep(2, 3)
rep(c(1,2), 2, each=3)
d
?dbinom
pbinom(0, 4, .5, lower.tail=TRUE)
pbinom(1, 4, .5, lower.tail=TRUE)
pbinom(4, 4, .5, lower.tail=TRUE)
?pbinom
?dbinom
?dnorm
?dgeom
rbinom(1, 10, .5)
rbinom(1000, 10, .5)
qbinom(c(0.0, 0.25, 0.5, 0.75, 1.0), 10, .5)
qbinom(5, 10, .5)
qbinom(.3, 10, .5)
qbinom(.25, 10, .5)
qbinom(.35, 10, .5)
qbinom(.4, 10, .5)
rep('a', 3)
rep(c('a','b'), 3)
rep(c('a','b'), 3, each=2)
> rep('a', 3)
[1] "a" "a" "a"
> rep(c('a','b'), 3)
[1] "a" "b" "a" "b" "a" "b"
> rep(c('a','b'), 3, each=2)
 [1] "a" "a" "b" "b" "a" "a" "b" "b" "a" "a" "b" "b"
> 
d
d
d
d
p_die_1
?pbinom
?pbinom
d
q
pp
quantile
quantile
d
sample
density
quantile
probaility
probability
d_density
merge(d_density, d_probability)
merge(d_density, d_probability, by=type)
merge(d_density, d_probability, by='type')
d_density
merge(d_density, d_probability, by='type')
merge(d_density, d_probability)
merge(d_density, d_probability, by='val')
merge(d_density, d_probability, all=TRUE)
d
d
d
d
e
s
d
d
d
dd
dd
exp_val
d
d
d
d
d
d
dd
d
d
d
d
d
d
d
1:9
d
p
?sample
[]
p
p
p
p
p
?sample
ap
p
p
n_flips
exp_results
n
exp_results
exp_results
p_estimate
?dbinom
?1
?dbinom
a
exp_results
z
x
p_estimate
x
?rbinom
x
exp_results
exp_results
p
exp_results
p_estimate
p_data_given_H0
x
exp_results
n
p_data_given_H0
n
p_data_given_H0
p_data
p_data_given_H0
b['p.value']
?pbinom
?pbinom
 p_data_given_H0
p_data_given_H0
p_data_given_H0
?pbinom
p_data_given_H0
n
p_h)
p_h0
p_H0
p
x
x
p
d
exp_results
ggplot(d, aes(x,p)) +
  geom_point() +
  geom_segment(aes(x=x, xend=x, y=0, yend=p)) +
  geom_vline(xintercept=exp_results, colour='red') +
  geom_rect(aes(
    xmin=exp_results,
    xmax=n,
    ymin=0,
    ymax=Inf),
    fill='red',
    alpha=0.5) +
  xlab('Number of successes in n Bernoulli trials') +
  theme(aspect.ratio = 1) +

p
d
d[1:exp_results, sum(p)]
p_data_given_H0
?pbinom
d[1:exp_results, sum(p)]
d[exp_results:Inf, sum(p)]
d[exp_results:.N, sum(p)]
d[exp_results:.N, sum(p)]
d
dd
d
dd
dd
d
d
p_value
d
d
p_val
x
p_val
p_val
?binom.test
p_val
p_val
d
p_value
p_val
d
d
d
dd
dd
dd
x_obs
dd
x_obs
plot(p_H0)
plot(p_H1)
x
n
x
d
p_vla
p_val
x_obs
n
p_H0
p_val
p_val
x
d
?dbinom
x
density
x
probability
length(x)
pp
x
density
probability
quantile
d
?pbinom
probability
pp
pp
n
p
n
sample
sample
?sample
d
s
min(s)
max(s)
d
x
e
s
d
d
d
dd
dd
d
dd
d
exp_val
d
d <- data.table(n=n_rec, p=p_rec, x=x_rec, p_binom = p_binom_rec)
d
d
d
d
d
0^2
2 + 2
2*2
2^(7-7)
6^(7-7)
6^(7-8)
sqrt(4)
4^(1/2)
d
p
exp_results
p_estimate
exp_results
p_data_given_H0
d
p_value
d
p_value
p
?binom.test
?binom.test
p_val
p_data_given_H0
p_val
d
d
d
e
d
d
dd
p
p
p
p
p
p
p
d
p
p
d
p
n_toal
n_4_notag <- factorial(10) / factorial(10-4)
n_total
n_2_tagged
n_4_tagged
n_4_totag
n_4_notag


p
p
d
d
d
?where
?which
?which
d
d
dd
dd
d
d[, s8 : NULL]
d[, s8 := NULL]
d
dd
  C-c C-c
dd
d
d[, s:=exp_results_1+exp_results_2]
ad
d
ss
d
d
p
d
d
px
Ex
d
Ex
d
d
d
covxy
p
?dgeom
?dgeom
p
exp_results
p = 0.3
?pgeom
?binom.test
?binom.test
?pegeom
?pgeom
pgeom(10, .5)
pgeom(10, .5, lower.tail=F)
?pgeom
