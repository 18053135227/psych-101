possible_outcomes
possible_permutations
possible_combinations
d
possible_permutatiosn
possible_permutations
?permutations
possible_combinations
permutations
?Recall 
?Recall 
Recall
factorial(4)
d
d
d[, X]
p
d
possible_outcomes
d
possible_outcomes
as.data.table(possible_outcomes)
d
d
d
d
d
p
d
d
p
p
d
p
d
d[, p := NULL]
d
dd
dd
dd[, sum(N)]
dd
dd
p
e
s
length(s)
d
d
d
d
d[, unique(X)]
dd
dd
dd
dd[, sum(o)]
dd[, sum(p)]
dd
dd
p0
p
d
d
?pgeom
x
?pgeom
?pgeom
0.7037037 + 0.2962963
d
melt(d, x)
melt(d, id.vars=x)
d[unique(x)]
str(d)
d
melt(d, id.vars=x)
melt(d, measure.vars = c('y1', 'y2', 'y3'))
melt(d, measure.vars = c('y1', 'y2', 'y3'))
dd
d
x
x
x
p
d
d
d
dd
p
dd
d
d
dd
ddd
d
melt(d)
melt(d, measure.vars=s1)
dd
ddd
dd
dd
s1
table(s)
table(s1)
as.data.table(s1)
s1
d
dd
ddd
d
dd
s1
d1
dd1
dd
list(dd1,dd2,dd3)
dd
dd
class(dd)
dd1
dd2
dd3
dd
str(dd)
dd
d
dd
E_y
E_x
p
d
dd
d
dd
dd
dd
dd
dd
 d
s1
Expected_value_1
Expected_value_2
Expected_value_3
possible_permutations
possible_combinations
2 * 2 * 2 * 2
num_permutes_per_consumer
num_outcomes_per_consumer
choose(4,2)
3,2
choose(8,4)
possible_combinations
possible_permutations
d
d
possible_combinations
d
d
d
d[, 1:4]
d[, sum(1:4)]
d[, sum(.(1:4))]
possible_combinations
16 - 5
d
str(table(d))
p
str(p)
d
dd
p
dd
dd
d
choose(15,3)
d
d[, sum(c(V1=='good'))]
d[, sum(c(V1=='good')), ev]
d[, .(sum(c(V1=='good')))]
d
dd
d[, .N]
p
d
dd
dd
dd
dd
dd
d
dd
dd
poss
possible_combinations
possible_combinations
possible_combinations
d
d
possible_permutations
dd
d
dd
?binom
?binom
?dbinom
dd
?dbinom
?dbinom
?dbinom
possible_permutations
d
d
d[X==0]
d
d
d
dd
d
d
d
d
d
dd
d
dd
d
d
d
d
d
dd
d
d
d
d
d[, p_ev := NULL]
d
d
dd
?pbinom
Vggd
d
d
d
p
n
d
n
p
x1
x2
x3
n
p
y1
y2
y3
x1
x2
x3
length(x1)
length(y1)
x
y
n
x
length(n)
length(x)
rep(1, 2)
d
d
?outer
n
n_rec
p_rec
n_rec
n_rec
p_rec
d
d
d
sample
d
d
dd
dd
dd
d
dd
dd
dd
d
exp_val
exp_val
10 * .5
d
d
d
d
dd
d
d
d
dd
dd
dd
dd
dd
dd
dd
dd
dd
d1
d2
d3
mean(s1)
mean(s2)
mean(s3)
dd
sample_mean
sample_mean
sample_mean
dd
dd1
s1
dd1
dd2
dd3
dd
dd1
dd1
dd2
dd1
dd
dd
dd
dd
dd_rec
dd_rec <- c(dd_rec, 2)
dd_rec
dd_rec
class(dd_rec)
dd_rec[1]
dd_rec
dd_rec
?list
?vector
dd_Rec
dd_rec
dd[1]
dd_rec
dd_rec[1]
dd_rec[[1]]
dd_rec
dd
dd
dd
d
E_x
E_y
dd
dd
dd
d
d
dd
dd
p)
p
dd
num_outcomes_per_consumer
possible_permu
possible_permutations
possible_outcomes
d
d
p
dd
dd
dd
dd
dd
ggplot(dd, aes(x=X, y=p)) +
  geom_point() +
  geom_segment(aes(xend=X, yend=0)) +
  facet_wrap(~variable) +
  theme(aspect.ratio = 1) +
  geom_vline(aes(xintercept=pop_mean, colour='red')) +
  geom_segment(aes(
    x=pop_mean-pop_sd,
    xend=pop_mean+pop_sd,
    y=0.5,
    yend=0.5,
    colour='red')) +
  xlab('X = number of A preferences') +
  ylab('Probability') +

dd
d
dd
d
p)
p0
dd
?pbinom
?pbinom
dd
d
sample
x
d
d
exp_val
dd
dd
dd
dd[, unique(population_mean), .(n,p)]
dd[, unique(pop_mean), .(n,p)]
dd[, unique(pop_mean), .(p)]
dd[, unique(sample_mean), .(p)]
value
d
dd
melt(d)
dd <- melt(d)
dd
dd
dd <- data.table(c(value, value), c(p_x, p_y))
dd
dd
d
E_x
E_y
dd
dd
dd
dd
dd
dd
dd
e
permutations(length(e), 3, e, repeats.allowed=FALSE)
permutations(length(e), 3, e, repeats.allowed=TRUE)
permutations(length(e), 3, e, set=TRUE, repeats.allowed=TRUE)
permutations(length(e), 3, e, set=TRUE, repeats.allowed=FALSE)
e
permutations(length(e), 3, e, set=FALSE, repeats.allowed=FALSE)
d
d
d
dd
dd
dd
d
dd 
dd
p
possible_combinations
possible_permutations
possible_combinations
possible_permutations
num_outcomes_per_consumer
d
d
d
?table
d[, X] 
p
dd
d[, .N]
dd
p
dd
dd[X >= 2]
dd
dd
dd
dd
d
d
d[, unique(pX)]
d[, unique(pX), .(X)]
dd
?dbinom
?pbinom
ad
d
d
rep(2, 3)
rep(c(1,2), 2, each=3)
d
?dbinom
pbinom(0, 4, .5, lower.tail=TRUE)
pbinom(1, 4, .5, lower.tail=TRUE)
pbinom(4, 4, .5, lower.tail=TRUE)
?pbinom
?dbinom
?dnorm
?dgeom
rbinom(1, 10, .5)
rbinom(1000, 10, .5)
qbinom(c(0.0, 0.25, 0.5, 0.75, 1.0), 10, .5)
qbinom(5, 10, .5)
qbinom(.3, 10, .5)
qbinom(.25, 10, .5)
qbinom(.35, 10, .5)
qbinom(.4, 10, .5)
rep('a', 3)
rep(c('a','b'), 3)
rep(c('a','b'), 3, each=2)
> rep('a', 3)
[1] "a" "a" "a"
> rep(c('a','b'), 3)
[1] "a" "b" "a" "b" "a" "b"
> rep(c('a','b'), 3, each=2)
 [1] "a" "a" "b" "b" "a" "a" "b" "b" "a" "a" "b" "b"
> 
d
d
d
d
p_die_1
